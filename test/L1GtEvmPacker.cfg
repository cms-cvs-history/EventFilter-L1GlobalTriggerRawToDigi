//
// cfg file to pack a GT EVM record
//

process TestGtEvmPacker = {

    // source file: GT produced file, with EVM record
    source = PoolSource {
        untracked vstring fileNames = {
            'file:/afs/cern.ch/user/g/ghete/scratch0/CmsswTestFiles/testGt_EvmPacker_source.root'
        }
    }   

    untracked PSet maxEvents = { untracked int32 input = 10 }
    
    // load and configure modules
    
    // L1 GT EventSetup
    include "L1TriggerConfig/L1GtConfigProducers/data/L1GtConfig.cff"
    
    // L1 GT EvmPacker
    include "EventFilter/L1GlobalTriggerRawToDigi/data/l1GtEvmPack.cfi"

    // input tag for GT readout record: 
    //     l1GtEmulDigis   = GT emulator (default)
    //     l1GtEvmUnpack   = GT EVM unpacker 

    //replace l1GtEvmPack.EvmGtInputTag = l1GtEvmUnpack
    

    /// mask for active boards (actually 16 bits)
    //      if bit is zero, the corresponding board will not be packed
    //      default: no board masked: ActiveBoardsMask = 0xFFFF

    // no board masked (default)
    //replace l1GtEvmPack.ActiveBoardsMask = 0xFFFF
    
    // GTFE only in the record
    //replace l1GtEvmPack.ActiveBoardsMask = 0x0000

    // GTFE + TCS 
    //replace l1GtEvmPack.ActiveBoardsMask = 0x0001

    // GTFE + FDL 
    //replace l1GtEvmPack.ActiveBoardsMask = 0x0002
     
    // GTFE + TCS + FDL
    //replace l1GtEvmPack.ActiveBoardsMask = 0x0003


    // module list
    path p = { l1GtEvmPack }
    
    // exception treatment
    untracked PSet options = {
       // skip the event if processing modules produce
       // category "A", "B", or "C" exceptions
       //vstring SkipEvent = { "A", "B", "C" }
       //vstring FailModule = { "Q" }
       //... one vstring per action type
       
       untracked vstring IgnoreCompletely = { "NotFound" }
    }    

        
    // uncomment / comment messages with DEBUG mode to run in DEBUG mode
    service = MessageLogger {

      untracked vstring destinations =  {"testGt_EvmPacker"}
      untracked PSet testGt_EvmPacker = { 
          untracked string threshold = "DEBUG"                  // DEBUG mode 
          untracked PSet DEBUG = { untracked int32 limit = -1}  // DEBUG mode, all messages  
          //untracked PSet DEBUG = { untracked int32 limit = 10}  // DEBUG mode, max 10 messages  
          untracked PSet INFO = { untracked int32 limit = -1}    
      }
      untracked vstring debugModules = { "l1GtEvmPack"}          // DEBUG mode 
      
    }
        
    module outputL1GtEvmPack = PoolOutputModule { 

        // keep only packed data in the ROOT file
        untracked vstring outputCommands = {
            "drop *",
            "keep *_l1GtEvmPack_*_*"
        }

        untracked string fileName = "testGt_EvmPacker_output.root" 
    }
    endpath outpath = { outputL1GtEvmPack }
    
        
}