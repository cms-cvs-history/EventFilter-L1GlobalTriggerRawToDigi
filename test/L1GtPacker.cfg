//
// cfg file to pack a GT DAQ record
//

process TestGtPacker = {

    // source file: GT produced file, with GMT and GCT records included 
    source = PoolSource {
        untracked vstring fileNames = {
            'file:/afs/cern.ch/user/g/ghete/scratch0/CmsswTestFiles/testGt_Packer_source.root'
        }
    }   

    untracked PSet maxEvents = { untracked int32 input = 10 }
    
    // load and configure modules
    include "EventFilter/L1GlobalTriggerRawToDigi/data/l1GtPack.cfi"

    // input tag for GT readout record: 
    //     l1GtEmulDigis   = GT emulator (default)
    //     l1GtUnpack      = GT unpacker 

    //replace l1GtPack.DaqGtInputTag = l1GtUnpack
    
    // input tag for GMT readout collection: 
    //     l1GmtEmulDigis = GMT emulator (default)
    //     l1GtUnpack     = GT unpacker 

    //replace l1GtPack.MuGmtInputTag = l1GtUnpack

    /// mask for active boards (actually 16 bits)
    //      if bit is zero, the corresponding board will not be packed
    //      default: no board masked: ActiveBoardsMask = 0xFFFF

    // no board masked (default)
    replace l1GtPack.ActiveBoardsMask = 0xFFFF
    
    // GTFE only in the record
    //replace l1GtPack.ActiveBoardsMask = 0x0000

    // GTFE + FDL 
    //replace l1GtPack.ActiveBoardsMask = 0x0001
     
    // GTFE + GMT 
    //replace l1GtPack.ActiveBoardsMask = 0x0100

    // GTFE + FDL + GMT 
    //replace l1GtPack.ActiveBoardsMask = 0x0101

    // module list
    path p = { l1GtPack }
    
    // exception treatment
    untracked PSet options = {
       // skip the event if processing modules produce
       // category "A", "B", or "C" exceptions
       //vstring SkipEvent = { "A", "B", "C" }
       //vstring FailModule = { "Q" }
       //... one vstring per action type
       
       untracked vstring IgnoreCompletely = { "NotFound" }
    }    

        
    // uncomment / comment messages with DEBUG mode to run in DEBUG mode
    service = MessageLogger {

      untracked vstring destinations =  {"testGt_Packer"}
      untracked PSet testGt_Packer = { 
          untracked string threshold = "DEBUG"                  // DEBUG mode 
          untracked PSet DEBUG = { untracked int32 limit = -1}  // DEBUG mode, all messages  
          //untracked PSet DEBUG = { untracked int32 limit = 10}  // DEBUG mode, max 10 messages  
          untracked PSet INFO = { untracked int32 limit = -1}    
      }
      untracked vstring debugModules = { "l1GtPack"}          // DEBUG mode 
      
    }
        
    module outputL1GtPack = PoolOutputModule { 

        // keep only packed data in the ROOT file
        untracked vstring outputCommands = {
            "drop *",
            "keep *_l1GtPack_*_*"
        }

        untracked string fileName = "testGt_Packer_output.root" 
    }
    endpath outpath = { outputL1GtPack }
    
        
}