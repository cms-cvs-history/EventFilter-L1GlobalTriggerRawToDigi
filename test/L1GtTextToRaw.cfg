//
// cfg file for a module to produce a raw GT DAQ or EVM record 
// starting from a text (ASCII) file
//

process TestGtTextToRaw = {

    // source file: ASCII file, hex format, one 64bits word per line
    // some standard dumps could be given directly and will be cleaned  

    source = EmptySource {
    }   

    untracked PSet maxEvents = { untracked int32 input = 10 }
    
    // load and configure modules
    include "EventFilter/L1GlobalTriggerRawToDigi/data/l1GtTextToRaw.cfi"
    
    // text file type: indicate the producer of the file
    // for standard dumps, the module will clean the file
    //replace l1GtTextToRaw.TextFileType = "VmeSpyDump"
    
    //
    replace l1GtTextToRaw.TextFileName = "/afs/cern.ch/user/g/ghete/scratch0/CmsswTestFiles/testGt_TextToRaw_source.txt"

    // FED Id (default 813)
    //replace l1GtTextToRaw.DaqGtFedId = 813
    
    // FED raw data size (in 8bits units, including header and trailer)
    // If negative value, the size is retrieved from the trailer.        
    //replace l1GtTextToRaw.RawDataSize = 872
     
    // module list
    path p = { l1GtTextToRaw }

    // uncomment / comment messages with DEBUG mode to run in DEBUG mode
    service = MessageLogger {

      untracked vstring destinations =  {"testGt_TextToRaw"}
      untracked PSet testGt_TextToRaw = { 
          untracked string threshold = "DEBUG"                  // DEBUG mode 
          untracked PSet DEBUG = { untracked int32 limit = -1}  // DEBUG mode, all messages  
          //untracked PSet DEBUG = { untracked int32 limit = 10}  // DEBUG mode, max 10 messages  
          untracked PSet INFO = { untracked int32 limit = -1}    
      }
      untracked vstring debugModules = { "l1GtTextToRaw"}          // DEBUG mode 
      
    }
        
    module outputL1GtTextToRaw = PoolOutputModule { 

        // keep only packed data in the ROOT file
        untracked vstring outputCommands = {
            "drop *",
            "keep *_l1GtTextToRaw_*_*"
        }

        untracked string fileName = "testGt_TextToRaw_output.root" 
    }
    endpath outpath = { outputL1GtTextToRaw }
    
            
}